package lyc.compiler;

import java_cup.runtime.*;

class Parser;


// Terminals
terminal ASSIG;
terminal PLUS;
terminal SUB;
terminal MULT;
terminal DIV;
terminal OPEN_BRACKET;
terminal CLOSE_BRACKET;
terminal INTEGER_CONSTANT;
terminal STRING_CONSTANT;
terminal FLOAT_CONSTANT;
terminal AND;
terminal OR;
terminal NOT;
terminal TYPE_INTEGER;
terminal TYPE_FLOAT;
terminal TYPE_STRING;
terminal IF;
terminal START_IF;
terminal END_IF;
terminal ELSE;
terminal WHILE;
terminal START_WHILE;
terminal END_WHILE;
terminal INIT;
terminal IDENTIFIER;
terminal COLON;
terminal COMMA;
terminal SEMICOLON;
terminal OPEN_LLAVE;
terminal CLOSE_LLAVE;
terminal LESS;
terminal LESSOREQUAL;
terminal EQUAL;
terminal GREATER;
terminal GREATEROREQUAL;

terminal GETPENULTIMATEPOSITION;
terminal TRIANGULO;
terminal LEER;
terminal ESCRIBIR;

// Non Terminals
non terminal sentence;
non terminal type;
non terminal assignment;
non terminal expression;
non terminal term;
non terminal factor;
non terminal programa;
non terminal bloquedeclaracion;
non terminal root;
non terminal listavariables;
non terminal listaIds;
non terminal while;
non terminal expresionTexto;

non terminal selection;
non terminal condition;
non terminal comparation;


// Start Symbol Definition
start with sentence;


sentence ::= assignment {: System.out.println("End"); :};
assignment ::= IDENTIFIER ASSIG expression {: System.out.println("Assignment"); :};
expression ::= expression PLUS term {: System.out.println("+"); :};
expression ::= expression SUB term {: System.out.println("-"); :};
expression ::= term {: System.out.println("Expression = Term"); :};
term ::= term MULT factor {: System.out.println("*"); :};
term ::= term DIV factor {: System.out.println("/"); :};
term ::= factor {: System.out.println("Term = factor"); :};
factor ::= IDENTIFIER:id  {: System.out.println("Id: " + id); :};
factor ::= INTEGER_CONSTANT:constant {: System.out.println("Constant: " + constant ); :};
factor ::= OPEN_BRACKET expression CLOSE_BRACKET {: System.out.println("Factor = (Expression)"); :};