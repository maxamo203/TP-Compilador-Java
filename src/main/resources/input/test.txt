*-inicializacion-*
init{
    a,b,c,d,e: Int
    x,z : Int
    f,g : Float
    triangulo1, triangulo2, triangulo3 : String
    cadena1, cadena2 : String
}

*-asignaciones-*
c := 3
a := 1
*-b := "tipo incorrecto"-*
e := 22
cadena1 := "Hola Mundo"
*-cadena2 := "@unlam$!-*

*-cadenaLargaJusta := "1234567890123456789012345678901234567890" -*
*-cadenaLarga := "12345678901234567890123456789012345678901"-* *-String muy largo-*

*-idlargo89012345678901234567890 := 0-*
*-idlargo890123456789012345678901 := 0-* *-Id muy largo-*

*-enteroGrandeJusto := 65535 -*
*-enteroGrande := 65536 -* *-Id muy grande-*

x := 10 
z := 20
g := .99
*-variableNoexiste := 4 -**-error por variable no declarada-*
*-operaciones y triangulo-*
*-x := triangulo(x, 1+1, x)-*  *- error por tipo invalido-*
triangulo2 := triangulo(0, 1/x, 0) *- y = "isóceles" -*
triangulo3 := triangulo((32+5+x)*z, 1/x, 100) *- y = "escaleno" -*

*-caso especial (getPenultimatePosition)-*
f := getPenultimatePosition([1,.1,3,4.5,5,6.2,7]) *- f = 6 -*

*-lecturas y escrituras-*
leer(d)
escribir(d)

escribir(String triangulo1)
escribir(String triangulo2)
escribir(String triangulo3)

escribir(String cadena1)
escribir(String cadena2)

escribir("Chau Mundo")
*-escribir("Chau Mundo!")-*

escribir(f)

*-condicionales-*
si(a==(1+1) OR c==2){
    b := 3
}
si(NOT c==2){
    b := 3
}
si(a>b AND c>a){
    b := 5
}
sino{
    b := 3
}
¿a>b AND c>a?{
    ¿¿NOT 3 <4??{
        escribir("hola universo")
    }
}

*-while-*
mientras(a<b){

    mientras(2 <= 5 AND a==b){
        si(NOT c==b){
            leer(d)
            escribir(d)

            escribir(String triangulo1)
            escribir(String triangulo2)
            escribir(String triangulo3)

            escribir(String cadena1)
            escribir(String cadena2)
        }sino{
            f := getPenultimatePosition([1,.1,3,4.5,5,6.2,7])
            si(2<=5){
                a := 4+3*(23)+(20+4)
            }sino{
                a := ((((3+(2)))))
            }
        }
    }
    a := a+1
    escribir(String cadena1)
}

*-operaciones-*
c:=d*(e-21)/4
d := -d*(-e-21)/-4